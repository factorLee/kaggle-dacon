{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"baseline필사01.ipynb","provenance":[],"authorship_tag":"ABX9TyMO0SJWNQtZjRwY1x1IcO6K"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# import"],"metadata":{"id":"D-6CChQ5XeOX"}},{"cell_type":"code","source":["import warnings\n","warnings.filterwarnings(\"ignore\")"],"metadata":{"id":"z_xadjPLXd0j","executionInfo":{"status":"ok","timestamp":1661185460504,"user_tz":-540,"elapsed":4,"user":{"displayName":"SNAGJU LEE","userId":"14246109779570198122"}}},"execution_count":1,"outputs":[]},{"cell_type":"code","source":[""],"metadata":{"id":"EmJm_NdhYV0x"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":4,"metadata":{"id":"zkxKHqW7XUEm","executionInfo":{"status":"ok","timestamp":1661185728632,"user_tz":-540,"elapsed":4203,"user":{"displayName":"SNAGJU LEE","userId":"14246109779570198122"}}},"outputs":[],"source":["# 기본\n","import itertools\n","import numpy as np\n","import pandas as pd\n","import seaborn as sns\n","import matplotlib as mpl\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import make_scorer\n","\n","# 시계열\n","from datetime import datetime as dt\n","from statsmodels.tsa.arima_model import ARIMA\n","from dateutil.relativedelta import relativedelta\n","from statsmodels.tsa.api import SimpleExpSmoothing, Holt, ExponentialSmoothing\n","\n","# 회귀분석\n","from sklearn.svm import SVR\n","from xgboost import XGBRegressor\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.pipeline import make_pipeline, Pipeline\n","from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.model_selection import KFold, cross_val_score, GridSearchCV\n","from sklearn.linear_model import LinearRegression, Ridge, Lasso, ElasticNet\n","\n","# Deep Neural Network\n","from keras.layers.core import Dense, Activation, Dropout\n","from keras.layers.recurrent import LSTM\n","from keras.models import Sequential\n","import time\n","\n","# 설정\n","%matplotlib inline\n","pd.options.display.max_columns = 400\n","pd.options.display.float_format = '{:.5f}'.format\n","from IPython.display import Image\n","plt.rc('font', family='NanumGothic') # For Windows\n"]},{"cell_type":"markdown","source":["# Evaluate Metric\n","- MAE(Mean"],"metadata":{"id":"mUvp_HIlYr0l"}},{"cell_type":"code","source":[""],"metadata":{"id":"VnR_6MrXYUM_"},"execution_count":null,"outputs":[]}]}